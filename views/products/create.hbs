{{#extends "base"}}

{{#block "content"}}
<h1>Add a New Product</h1>
<form method="POST">
    {{{form}}}

     <div>
        <button id="upload_widget" class="btn btn-primary">Upload</button>
        <img src="#" style="display:none" id="uploaded_image"/>
    </div>
    <input type="hidden" value="{{csrfToken}}" name="_csrf"/>
    <input type="submit" class="btn btn-primary mt-3" />
   
</form>
{{/block}}

{{#block "js"}}
<!-- axios -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"
    integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ=="
    crossorigin="anonymous"></script>

<!-- cloudinary widget -->
<script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>

<script>

    // the cloudinary widget will call this function
    function generateSignature(callback, params_to_sign) {
        axios.get('/cloudinary/sign', {
            params: {
                "params_to_sign": params_to_sign
            }
        }).then(function (response) {
            callback(response.data);
        })
    }

    const cloudName = "{{cloudinaryName}}";
    const apiKey = "{{cloudinaryApiKey}}";
    const uploadPreset = "{{cloudinaryPreset}}";

    // create the widget
    const myWidget = cloudinary.createUploadWidget({
        cloudName: cloudName,
        apiKey: apiKey,
        uploadPreset: uploadPreset,
        uploadSignature: generateSignature
    }, (err,result)=>{
        if (!err && result && result.event =="success") {
            console.log(result.info);
            const imageUrl = result.info.url;
            document.querySelector("#id_image_url").value = imageUrl;
            document.querySelector("#uploaded_image").src = imageUrl;
            document.querySelector("#uploaded_image").style.display="block";
        }
       
    });

    document.querySelector("#upload_widget")
        .addEventListener("click", function(e){
            e.preventDefault();
            myWidget.open();
        })

</script>
{{/block}}

{{/extends}}